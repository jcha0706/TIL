14-15
-프로세서는 명령어를 인출, 해석, 실행 사이클을 계속 반복 수행하는데,
-여기서 명령어를 해석한다는게, 명령어를 수행하는 데 필요한 모든 준비를
마치는 것을 의미.
-그후 명령어를 실행하는데, 실행이란 산술 연산이나 논리 연산을 수행하고, 그 결과를
저장하는 작업을 명령어에 따라 적절하게 조합하는 것을 의미합니다.
-보통 프로세서에는 수십 개에서 수백개의 명령어가 있고, 프로그램에는
수백만개의 명령어가 포함.

-컴퓨터 아키텍처는 프로세서 설계, 프로세서와 컴퓨터 나머지 부분 간의 연결 방식을
뜻함.
-프로세서 속도는 매우 빨라서 명령어 한 개를 1 나노초 (10억분으 1)보다 훨씬 더 짧은 시간 내에 수행
한다.

-프로세서가 더 빨리 작동하도록 여러가지 아키텍처 기법을 동원 합니다
-예를들어, 프로세서 여러 개가 동시에 작업하는 기법도 있는데, 요즘은 단일 칩에
더 많은 프로세서 코어를 담는것이 일방적.
-당연히 여러 개의 명령어를 동시에 처리하니, 전체적인 처리 속도가 빨라지겠죠?
-------
-캐싱에대해서 알아보자
-캐시는 용량이 작고 속도가 빠른 메모리로, 주 기억 장치에 매번 접근하는 것을
피하고자 최근에 사용된 정보를 저장하는 데 사용된다.
-따라서, 매번 메모리에서 직접 인출 하지 않고, 메모리 작업을 기다릴 필요가
없어 빨리 실행 된다.
-캐싱은 캐싱자체 이외에 폭넓게 적용 가능한 "아이디어"입니다.
-우리가 캐시의 효과를 경험 할 수 있는데, 워드나 엑셀 같은 프로그램에
있는 최근에 사용된 파일 목록도 일종의 캐싱효과 (캐싱)라고  보면 된다. 











-데스크톱과 노트북 용 프로세서는 주로 인텔, AMD가 공급자지만, 테블릿, 휴대폰은
대부분 ARM이라는 프로세서를 사용. 이유는 전력을 적게사용 하도록
특별히 설계되었기 때문

-그중 파이프라이닝이란, 인출과 실행 단계가 겹치도록 프로세서를 설계해서
명령어 여러 개가 다양한 단계에 걸쳐 진행되도록 만든 것을 뜻한다.

---------------------------------------



-일반적으로 프로세서에는 캐시가 2~3개 있고, L1, L2, L3라 불린다.
-예를 들어 워드나 파이어폭스 같은
프로그램을 실행 한후, 그 프로그램을 종료했다가, 즉시 재 시작하면, 두 번째로
실행했을 때 로딩 시간이 더 짧다. 프로그램의 명령어가 아직 메모리에 있고,
메모리가 디스크에 대한 캐시로 사용 되었기 때문이다.